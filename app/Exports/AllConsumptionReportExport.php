<?php

namespace App\Exports;

use Maatwebsite\Excel\Concerns\FromCollection;
use App\models\raisoni\ConsumptionReport;
use Maatwebsite\Excel\Concerns\WithHeadings;
use Maatwebsite\Excel\Concerns\Exportable;
use Maatwebsite\Excel\Concerns\WithEvents;
use Maatwebsite\Excel\Events\AfterSheet;
use Maatwebsite\Excel\Concerns\ShouldAutoSize;
use Maatwebsite\Excel\Concerns\WithCustomStartCell;
use App\models\raisoni\StationaryStock;
use App\models\raisoni\DamagedStock;
use DB;

class AllConsumptionReportExport implements FromCollection, WithCustomStartCell , WithHeadings,WithEvents, ShouldAutoSize

{
    /**
    * @return \Illuminate\Support\Collection
    */
    public function collection()
    {
        $AllConsumptionReportExport = [];

        $totalCards = StationaryStock::select(DB::raw("SUM(quantity) as totalCards"))->where('card_category','Grade Cards')->get()->toArray();
        $totalCountConsumed = ConsumptionReport::select('id')->where('serial_no','!=','')->count();
        $totalCountCancel = DamagedStock::select('id')->where('type','Cancel')->where('card_category','Grade Cards')->count();
        $totalCountDamaged = DamagedStock::select('id')->where('type','Damaged')->where('card_category','Grade Cards')->count();
        $totalCountDuplicate = DamagedStock::select('id')->where('type','Duplicate')->where('card_category','Grade Cards')->count();
        
        $totalBalanceCount = $totalCards[0]['totalCards'] - (($totalCountConsumed) + ($totalCountCancel) + ($totalCountDamaged) + ($totalCountDuplicate));

        $AllConsumptionReportExport[] = ['1',$totalCards[0]['totalCards'],$totalCountConsumed,$totalCountCancel,$totalCountDamaged,$totalCountDuplicate,$totalBalanceCount];
     	return collect($AllConsumptionReportExport);

    }

    public function startCell(): string
    {
        return 'A3';
    }
    
    public function headings(): array{
        $row = ['Sr. No.','Total Grade Cards','Total Consumed','Total Cancel','Total Damaged','Total Duplicate','Balance Count'];
        return $row;
    }

    public function registerEvents(): array
    {
        $user_data = \auth::guard('admin')->user()->username;
        
        return [
            AfterSheet::class    => function(AfterSheet $event) use ($user_data){
                $event->sheet->SetCellValue('A1', "Report Generated By : ".$user_data);
                $event->sheet->mergeCells('A1:C1');
                $cellRange = 'A1:C1'; 
                $event->sheet->getDelegate()->getStyle($cellRange)->getFont()->setBold(true);
                $cellRange = 'A3:g3'; // All headers
                $event->sheet->getDelegate()->getStyle($cellRange)->getFont()->setBold(true);
            },
        ];
    }
}
